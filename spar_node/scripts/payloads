import rospy
from std_msgs.msg import UInt8
from gpiozero import Servo
from time import sleep
from gpiozero.pins.pigpio.PiGPIOFactory import PiGPIOFactory

pigpio_factory = PiGPIOFactory()

epi_servo  = Servo(20, pin_factory=pigpio_factory)
tracker_servo  = Servo(21, pin_factory=pigpio_factory)

def callback(msg):
    # payload commands message structure:
    # both close:   0b00000000 (0)
    # both open:    0b00000011 (3)
    # tracker open: 0b00000010 (2)
    # epi open:     0b00000001 (1)
    
    if msg.data == 0:
        epi_servo.max()
        tracker_servo.max()
        sleep(2)
    elif msg.data == 3 or msg.data == 1:
        epi_servo.min()
        sleep(2)
        epi_servo.max()
        if msg.data == 3:
            tracker_servo.min()
            sleep(2)
            tracker_servo.max()
    elif msg.data == 2:
        tracker_servo.min()
        sleep(2)
        tracker_servo.max()

def main():
    epi_servo.max()
    tracker_servo.max()
    # Initialize ROS node
    rospy.init_node('servo_controller_node')
    
    # Subscribe to payloadcommands topic
    rospy.Subscriber('payloadcommands', UInt8, callback)
    
    # Keep the node alive
    rospy.spin()

if __name__ == '__main__':
    main()
